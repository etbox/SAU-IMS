<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fekpal.dao.user.PersonDao">
    <cache/>

    <sql id="allInfo">
        select * from person_info pi
        inner join user_info u on pi.user_id = u.user_id
    </sql>

    <sql id="info">
        select * from person_info
    </sql>

    <select id="get" parameterType="int" resultMap="personResult">
        <include refid="allInfo"/>
        where person_id = #{id}
    </select>

    <select id="getByUserId" parameterType="int" resultMap="personResult">
        <include refid="allInfo"/>
        where user_id = #{id}
    </select>

    <select id="getInfo" parameterType="int" resultMap="personResult">
        <include refid="info"/>
        where person_id = #{id}
    </select>

    <select id="getInfoByUserId" parameterType="int" resultMap="personResult">
        <include refid="info"/>
        where user_id = #{id}
    </select>

    <select id="getByNickName" parameterType="String" resultMap="personResult">
        <include refid="info"/>
        where nickname = #{nickname}
    </select>

    <sql id="exit">
        select count(*) from person_info
    </sql>

    <select id="isExit" parameterType="String" resultType="boolean">
        <include refid="exit"/>
        where nickname = #{nickname}
    </select>

    <insert id="add" parameterType="Person" useGeneratedKeys="true" keyProperty="personId" keyColumn="person_id">
        insert into person_info (
        user_id, real_name,
        nickname, gender,
        birthday, description,
        address, department,
        major, student_id,
        person_logo, person_state)
        values(
        #{userId}, #{realName},
        #{nickname}, #{gender},
        #{birthday}, #{description}
        #{address}, #{department},
        #{major}, #{studentId},
        #{logo}, #{personState})
    </insert>

    <update id="update" parameterType="Person">
        update person_info set
        real_name = #{realName},
        nickname = #{nickname},
        gender = #{gender},
        birthday = #{birthday},
        description = #{description},
        address = #{address},
        department = #{department},
        major = #{major},
        student_id = #{studentId},
        person_logo = #{logo}
        where person_id = #{personId}
    </update>

    <update id="delete" parameterType="int">
        update person_info set
        person_state = 0
        where person_id = #{id}
    </update>

    <select id="loadAll" resultMap="personResult">
        <include refid="info"/>
        limit #{arg0}, #{arg1}
    </select>

    <resultMap id="personResult" type="Person">
        <id property="personId" column="person_id"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginTime" column="login_time"/>
        <result property="userKey" column="user_key"/>
        <result property="registerIp" column="register_ip"/>
        <result property="registerTime" column="register_time"/>
        <result property="userState" column="user_state"/>
        <result property="realName" column="real_name"/>
        <result property="studentId" column="student_id"/>
        <result property="logo" column="person_logo"/>
        <result property="gender" column="gender"/>
        <result property="nickname" column="nickname"/>
        <result property="birthday" column="birthday"/>
        <result property="address" column="address"/>
        <result property="description" column="description"/>
        <result property="department" column="department"/>
        <result property="major" column="major"/>
        <result property="personState" column="person_state"/>
    </resultMap>
</mapper>