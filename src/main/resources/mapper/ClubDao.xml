<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fekpal.dao.user.ClubDao">
    <cache/>

    <select id="selectByPrimaryKey" parameterType="int" resultMap="result">
        select * from club_info
        where club_id = #{id}
    </select>

    <select id="selectFirstByExample" resultMap="result">
        select * from club_info
        <where>
            ${ex.sqlSegment}
        </where>
        limit 1
    </select>

    <select id="selectByExample" resultMap="result">
        select * from club_info
        <where>
            ${ex.sqlSegment}
            and club_id >= #{offset}
        </where>
        limit #{limit}
    </select>

    <select id="countByExample" resultType="int">
        select count(*) from club_info
        <where>
            ${ex.sqlSegment}
        </where>
    </select>

    <insert id="insert" parameterType="Club" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id">
        insert into club_info (
        user_id, club_name,
        found_time, decription,
        admin_name, club_type,
        club_logo, club_view,
        like_number, members
        club_state)
        values (
        #{userId}, #{clubName},
        #{foundTime}, #{description},
        #{adminName}, #{clubType}
        #{logo}, #{clubView},
        #{likeNumber}, #{members},
        #{clubState})
    </insert>

    <insert id="insertRecords" parameterType="List" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id">
        <foreach collection="records" item="item" separator=",">
        </foreach>
    </insert>

    <update id="updateByPrimaryKey" parameterType="Club">
        update club_info set
        club_name = #{clubName},
        found_time = #{foundTime},
        description = #{description},
        admin_name = #{adminName},
        club_type = #{clubType},
        club_logo = #{logo},
        club_view = #{clubView},
        like_number = #{likeNumber},
        members = #{members},
        club_state = #{clubState}
        where club_id = #{clubId}
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="Club">
        update club_info set
        <set>
            <if test="clubName != null">
                club_name = #{clubName},
            </if>
            <if test="foundTime != null">
                found_time = #{foundTime},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="adminName != null">
                admin_name = #{adminName},
            </if>
            <if test="clubType != null">
                club_type = #{clubType},
            </if>
            <if test="logo != null">
                club_logo = #{logo},
            </if>
            <if test="clubView != null">
                club_view = #{clubView},
            </if>
            <if test="likeNumber != null">
                like_number = #{likeNumber},
            </if>
            <if test="members != null">
                members = #{members},
            </if>
            <if test="clubState != null">
                club_state = #{clubState},
            </if>
        </set>
        where club_id = #{clubId}
    </update>

    <update id="updateByExample">
        update club_info set
        club_name = #{obj.clubName},
        found_time = #{obj.foundTime},
        description = #{obj.description},
        admin_name = #{obj.adminName},
        club_type = #{obj.clubType},
        club_logo = #{obj.logo},
        club_view = #{obj.clubView},
        like_number = #{obj.likeNumber},
        members = #{obj.members},
        club_state = #{obj.clubState}
        <where>
            ${ex.sqlSegment}
        </where>
    </update>

    <update id="updateByExampleSelective">
        update club_info set
        <set>
            <if test="clubName != null">
                club_name = #{obj.clubName},
            </if>
            <if test="foundTime != null">
                found_time = #{obj.foundTime},
            </if>
            <if test="description != null">
                description = #{obj.description},
            </if>
            <if test="adminName != null">
                admin_name = #{obj.adminName},
            </if>
            <if test="clubType != null">
                club_type = #{obj.clubType},
            </if>
            <if test="logo != null">
                club_logo = #{obj.logo},
            </if>
            <if test="clubView != null">
                club_view = #{obj.clubView},
            </if>
            <if test="likeNumber != null">
                like_number = #{obj.likeNumber},
            </if>
            <if test="members != null">
                members = #{obj.members},
            </if>
            <if test="clubState != null">
                club_state = #{obj.clubState},
            </if>
        </set>
        <where>
            ${ex.sqlSegment}
        </where>
    </update>

    <update id="deleteByPrimaryKey" parameterType="int">
        update club_info set
        club_state = 0
        where club_id = #{id}
    </update>

    <update id="deleteByExample">
        update club_info set
        club_state = 0
        <where>
            ${ex.sqlSegment}
        </where>
    </update>

    <resultMap id="result" type="Club">
        <id property="clubId" column="club_id"/>
        <result property="userId" column="user_id"/>
        <result property="clubName" column="club_name"/>
        <result property="foundTime" column="found_time"/>
        <result property="adminName" column="admin_name"/>
        <result property="clubType" column="club_type"/>
        <result property="logo" column="club_logo"/>
        <result property="clubView" column="club_view"/>
        <result property="likeNumber" column="like_number"/>
        <result property="members" column="members"/>
        <result property="clubState" column="club_state"/>
    </resultMap>
</mapper>